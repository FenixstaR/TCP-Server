unit TestUNetCore;
{

  Delphi DUnit Test Case
  ----------------------
  This unit contains a skeleton test case class generated by the Test Case Wizard.
  Modify the generated code to correctly setup and call the methods from the unit 
  being tested.

}

interface

uses
  TestFramework, IHandlerCore, UNetCore, System.SysUtils,
  System.Generics.Collections, UServer, UConnectedClient, System.Types,
  System.Threading, System.Net.Socket, System.Classes;

type
  TTestHandler = class(TInterfacedObject,IBaseHandler)
    procedure HandleReceiveData(const ABytes: TBytes);
  end;

  TestTNetCore = class(TTestCase)
  strict private
    FNetCore: TNetCore;
    TestHandle: TTestHandler;
  public
    procedure SetUp; override;
    procedure TearDown; override;
  published
    procedure TestStart;
    procedure TestStop;
  end;

implementation

procedure TestTNetCore.SetUp;
begin
  FNetCore := TNetCore.Create(TestHandle);
end;

procedure TestTNetCore.TearDown;
begin
  FNetCore.Free;
  FNetCore := nil;
end;

procedure TestTNetCore.TestStart;
begin
  FNetCore.Start;
  CheckTrue(True);
end;

procedure TestTNetCore.TestStop;
begin
  FNetCore.Stop;
  CheckTrue(True);
end;

{ TTestHandler }

procedure TTestHandler.HandleReceiveData(const ABytes: TBytes);
begin
  //
end;

initialization
  // Register any test cases with the test runner
  RegisterTest(TestTNetCore.Suite);
end.

